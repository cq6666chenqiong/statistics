<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.statistics.dao.MemScoreStatisticsDao" >

    <select id="getEndemicArea" resultType="map">
        select * from endemic_area
    </select>

    <select id="getProfessionalGroup" resultType="map">
        select * from professional_group
    </select>

    <select id="getlevels" resultType="map">
        select id,title from classroom where status = 'published'
    </select>

    <select id="getUserScoreNotAcsy" resultType="map">
        select * from user_score where isacsy = 0
    </select>

    <select id="getCourseById" parameterType="map" resultType="map">
        select * from course where id = #{courseId}
    </select>

    <select id="getLessonById" parameterType="map" resultType="map">
        select * from course_lesson where id = #{lessonId}
    </select>

    <select id="getTestPagerByMap" parameterType="map" resultType="map">
        select target from testpaper_result
        where testId = #{testId} and userId = #{userId}
        limit 0,1
    </select>

    <select id="getUserStatisticsScores" parameterType="map" resultType="map">
        select * from user_statistics_score
        <where>
            1 = 1
            <if test="userId != null and userId != ''">
                and userId = #{userId}
            </if>
            <if test="typeName != null and typeName != ''">
                and typeName = #{typeName}
            </if>
            <if test="type != null "> <!--and type != ''-->
                and type = #{type}
            </if>
            <if test="year != null and year != ''">
                and year = #{year}
            </if>
            <if test="area != null and area != ''">
                and endemic_area = #{area}
            </if>
            <if test="ispass != null"><!-- and ispass != ''-->
                and ispass = #{ispass}
            </if>
        </where>
    </select>

    <select id="updateUserStatisticsScores" parameterType="map" resultType="map">
        update user_statistics_score
        <set>
            <if test="totalScore != null">total_score = #{totalScore},</if>
            <if test="passmark != null">passmark = #{passmark},</if>
            <if test="passmark != null">passnum = #{passnum},</if>
            <if test="passmark != null">totalnum = #{totalnum},</if>
            <if test="passmark != null">ispass = #{ispass},</if>
        </set>
        where
            1 = 1
            and userId = #{userId}
            and type = #{type}
            and year = #{year}
    </select>


    <insert id="addUserStatisticsScore" parameterType="map">
        <!--<selectKey keyProperty="id" resultType="int" order="BEFORE">
            SELECT LAST_INSERT_ID()  as  id
        </selectKey>-->
        insert into user_statistics_score (
            id,
            userId,
            type,
            typeName,
            total_score,
            year,
            nickname,
            endemic_area
        )
        values(
            #{id},
            #{userId},
            #{type},
            #{typeName},
            #{totalScore},
            #{year},
            #{nickname},
            #{endemicArea}
        )
    </insert>

    <select id="getUserProfileById"  parameterType="map" resultType="map">
        select * from user_profile where id = #{userId}
    </select>

    <select id="getUserById"  parameterType="map" resultType="map">
        select * from user where id = #{userId}
    </select>

    <select id="getCoursesScoreMessage"  parameterType="map" resultType="map">
        <![CDATA[
            select c.id,c.giveCredit,c.buyable type,cl.title name from course c left join classroom cl on c.buyable = cl.id where c.buyable < 30 and cl.title is not NULL
            union
            select c.id,c.giveCredit,c.buyable type,p.pgroup name from course c left join professional_group p on c.buyable = p.group_no where c.buyable > 30 and p.pgroup is not NULL
        ]]>
    </select>

    <select id="getUserScoreMessage"  parameterType="map" resultType="map">
        select sum(score) score from user_score where
        userId = #{userId}
        and courseId = #{courseId}
    </select>

    <select id="getMemberCourse"  parameterType="map" resultType="map">
        select cm.courseId,c.giveCredit from course c LEFT JOIN course_member cm on c.id = cm.courseId
        LEFT JOIN course_expriy ce on cm.courseId = ce.courseId
        <where>
            1 = 1
            <if test="type != null">and c.buyable = #{type}</if>
            <if test="userId != null">and cm.userId = #{userId}</if>
            <if test="beginTime != null"><![CDATA[ and ce.expiryTime >= #{beginTime} ]]></if>
            <if test="endTime != null"><![CDATA[ and ce.expiryTime <= #{endTime} ]]></if>
        </where>
    </select>

    <select id="getAllUser"  parameterType="map" resultType="map">
        select u.id,u.nickname,up.varcharField3 endemic_area,up.truename truename,
        IF ( up.varcharField4='' , '其他' , up.varcharField4 ) professional_groups,company cengji
        from user u LEFT JOIN user_profile up on u.id = up.id
        <where>
            1 = 1
            <if test="truename != null and truename != ''">
                and up.truename = #{truename}
            </if>
            <if test="area != null and area != ''">
                and up.varcharField3 = #{area}
            </if>
        </where>
    </select>

    <select id="getUserByPage"  parameterType="map" resultType="map">
        select * from (
            select u.id,u.nickname,up.varcharField3 endemic_area,up.truename truename,
            IF ( up.varcharField4='' , '其他' , up.varcharField4 ) professional_groups,company cengji
            from user u LEFT JOIN user_profile up on u.id = up.id
            <where>
                1 = 1
                <if test="truename != null and truename != ''">
                    and up.truename = #{truename}
                </if>
                <if test="area != null and area != ''">
                    and up.varcharField3 = #{area}
                </if>
            </where>
            order by u.id asc
        ) a limit #{onpage},#{endpage}
    </select>


    <select id="getMemberCourseScore"  parameterType="map" resultType="map">
        select courseId,sum(score) score from user_score where userId = #{userId}
        and courseId = #{courseId} and year = #{year}
    </select>

    <select id="getUserTotalScore"  parameterType="map" resultType="map">
        select userId,sum(total_score) score from user_statistics_score
        where userId = #{userId} and year = #{year}
    </select>

    <insert id="addUserResult"  parameterType="map">
        insert into user_result(
            userId,
            status,
            total_score,
            year
        )
        values(
            #{userId},
            #{status},
            #{total_score},
            #{year}
        )
    </insert>

    <select id="getUserResult"  parameterType="map" resultType="map">
        select * from user_result where userId = #{userId} and year = #{year}
    </select>

   <update id="updateUserResult" parameterType="map">

       update user_result
       <set>
           <if test="status != null">status = #{status},</if>
           <if test="total_score != null">total_score = #{total_score},</if>
       </set>
       where 1 = 1 and userId = #{userId}
       and year = #{year}
   </update>

    <select id="getMemberDetailScore" parameterType="map" resultType="map">

        select  up.truename truename,u.nickname nickname,c.title title,ifnull(us.score,0) score,us.year year,ifnull(us.remark,'在线') remark,
        ifnull(us.courseName,'在线课程') courseName
        from user_score us left join user u on us.userId = u.id
        left join user_profile up on u.id = up.id left join course c on us.courseId = c.id
        where u.nickname = #{nickname}
    </select>


</mapper>